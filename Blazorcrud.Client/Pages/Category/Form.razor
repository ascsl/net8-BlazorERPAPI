@inject Blazorcrud.Client.Shared.PageHistoryState PageHistoryState

<EditForm Model="@category" OnValidSubmit="@OnValidSubmit">
    <FluentValidator TValidator="CategoryValidator" />
    <div class="form-group">
        <label>Name :</label>
        <div>
            <InputText @bind-Value="@category.Name" class="form-control col-sm-3" />
            <ValidationMessage For="@(() => category.Name)" />
        </div>
    </div>
    <div class="form-group">
        <label>Guid :</label>
        <div>
            <p class="form-control col-sm-3">@category.CategoryGuid</p>
        </div>
    </div>

    <hr/>
 
    <div class="form-group">
        <button disabled="@loading" class="btn btn-primary">
            @if (loading) 
            {
                <span class="spinner-border spinner-border-sm mr-1"></span>
            }
            @ButtonText
        </button>
        @if (PageHistoryState.CanGoBack()){
            <NavLink href="@PageHistoryState.GetGoBackPage()" class="btn btn-link">Cancel</NavLink>
        }
        else{
            <NavLink href="/category/1" class="btn btn-link">Back</NavLink>
        }
    </div>

</EditForm>

@code {
    [Parameter]
    public Category category { get; set; }
    [Parameter]
    public Guid CategoryGuid { get; set; }
    [Parameter]
    public string ButtonText { get; set; } = "Save";
    [Parameter]
    public bool loading {get; set;} = false;
    [Parameter]
    public EventCallback OnValidSubmit { get; set; }
}